#!/bin/bash
#
# This is a totally inelegant hack-job, and there are probably about a thousand better ways to do this.
# But the purpose is to scan a directory and subdirectories for files containing a particular string,
# and output a list of the file path/names.
#
while getopts ":i" opt; do
  case $opt in
    i)
		GREP_OPT="-i"
      ;;
    \?)
      ERR_STR="Invalid option: -$OPTARG"
      ;;
  esac
shift $((OPTIND - 1))
done
if [[ ($# != 2) || (! -d $2) ]]
then
echo -e
echo $ERR_STR

fmt <<'EOF'

Search directory and all subdirectories for files containing a particular string, and display only the filenames.

Usage: lookfor [-i] [string] [path]
  Where:
    [-i]     Ignore case. (optional)

    [string] Text to be searched for. If [string] contains spaces, it must be enclosed in quotes. Other special characters should be escaped with a backslash (\)

    [path]   May be relative or absolute, but must be a valid directory.

EOF
else
        find "$2" -type f -print0 | xargs -0 grep $GREP_OPT "$1" -sl
fi
